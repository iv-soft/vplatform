@using System.Linq;
@using System.Collections.Generic;
@using Microsoft.Extensions.DependencyInjection;
@{
  var entity_manager = get_service<IVySoft.VPlatform.TemplateService.Entity.IEntityManager>();
  var razor = get_service<IVySoft.VPlatform.TemplateService.Razor.IRazorManager>();
  var sp = entity_manager.get_db_model<IVySoft.SiteBuilder.DbModel>();
  var scope = sp.CreateScope();
  var db = scope.ServiceProvider.GetService<IVySoft.SiteBuilder.DbModel>();
  var control = (IVySoft.SiteBuilder.PasswordInput)db.PageControls.Single(x => x.Id == (int)Parameters["ControlId"]);
  var mode = (Parameters["Mode"] == null) ? "" : (string)Parameters["Mode"];
  var imports = (System.Collections.Generic.Dictionary<string, string>)Parameters["Imports"];
  if(!imports.ContainsKey("{Form}"))
  {
    imports.Add("{Form}", "react-bootstrap");
  }
}
@if(mode == "Inline")
{
  <Form.Control type="password" id="@control.ClientId" placeholder="@control.Placeholder"/>
}
else
{
  <Form.Group>
    <Form.Label htmlFor="@control.ClientId">@control.Label</Form.Label>
    <Form.Control
      type="password"
      id="@control.ClientId"
      placeholder="@control.Placeholder"
      aria-describedby="@(control.ClientId)HelpBlock"/>
    <Form.Text id="@(control.ClientId)HelpBlock" muted>@control.Help</Form.Text>
  </Form.Group>
  <Form.Group>
    <Form.Check id="@(control.ClientId)Check" type="checkbox" label="@control.CheckLabel" />
  </Form.Group>
}
