@using System.Linq;
@using System.Collections.Generic;
@using Microsoft.Extensions.DependencyInjection;
@{
  var entity_manager = get_service<IVySoft.VPlatform.TemplateService.Entity.IEntityManager>();
  var razor = get_service<IVySoft.VPlatform.TemplateService.Razor.IRazorManager>();
  var sp = entity_manager.get_db_model<IVySoft.SiteBuilder.DbModel>();
  var scope = sp.CreateScope();
  var db = scope.ServiceProvider.GetService<IVySoft.SiteBuilder.DbModel>();
  var control = (IVySoft.SiteBuilder.Repeater)db.PageControls.Single(x => x.Id == (int)Parameters["ControlId"]);
  var imports = (System.Collections.Generic.Dictionary<string, string>)Parameters["Imports"];
}
{@(string.IsNullOrEmpty(control.Source)?"data":("data."+control.Source)).map((data, index) => (
<@((control.Kind == null)?"div":control.Kind)>
@foreach(var child in control.Children.OrderBy(x => x.Order))
{
	var type = child.GetType().Name;
	if(type.EndsWith("Proxy")) type = type.Substring(0, type.Length - "Proxy".Length);
@:<@((control.Kind == null)?"div":"li")>
	@component(type, new System.Collections.Generic.Dictionary<string, object> { ["ControlId"] = child.Id, ["Imports"] = imports })
@:</@((control.Kind == null)?"div":"li")>
}
</@((control.Kind == null)?"div":control.Kind)>
))}
